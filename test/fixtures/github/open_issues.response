[{"pull_request":{"patch_url":"https://github.com/joyent/node/pull/3729.patch","html_url":"https://github.com/joyent/node/pull/3729","diff_url":"https://github.com/joyent/node/pull/3729.diff"},"comments":0,"title":"net: fix Socket({ fd: 42 }) api","created_at":"2012-07-17T23:55:02Z","user":{"login":"bnoordhuis","gravatar_id":"3d43d9038ab645ecb2e3a1df2951d30a","avatar_url":"https://secure.gravatar.com/avatar/3d43d9038ab645ecb2e3a1df2951d30a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":275871,"url":"https://api.github.com/users/bnoordhuis"},"html_url":"https://github.com/joyent/node/issues/3729","number":3729,"updated_at":"2012-07-17T23:55:02Z","state":"open","body":"Make the implementation match the documentation. This should work:\n\n```javascript\nvar s = new net.Socket({ fd: 42, allowHalfOpen: true };\n```\n\nAnd now it does.\n\nNode won't let you create arbitrary SOCK_STREAM sockets. I couldn't come up with a decent test because of that but here is an (admittedly rather lame) ad-hoc test:\n\n```c\n// compile with `gcc -o execfd execfd.c`\n#include <sys/socket.h>\n#include <sys/types.h>\n#include <sys/un.h>\n#include <unistd.h>\n\nextern char **environ;\n\nint main(int argc, char **argv)\n{\n  if (argc < 2) return 1;\n  close(3);\n  socket(AF_UNIX, SOCK_STREAM, 0);\n  execve(argv[1], argv + 1, environ);\n  return 1;\n}\n```\n\nStart an echo server:\n\n```bash\n$ node -e '\\\n  require(\"net\").createServer(echo).listen(\"/tmp/sock\"); \\\n  function echo(c) { c.pipe(c) }'\n```\n\nNow run the test script:\n\n```bash\n$ ./execfd node -e '\\\n  var s = new (require(\"net\").Socket)({fd:3}); \\\n  s.connect(\"/tmp/sock\", function() { \\\n    s.pipe(process.stdout); \\\n    s.end(\"BAM\\n\"); \\\n  })'\n```\n\nObserve how it fails hard without the patch. With the patch, it neatly prints \"BAM\" and exits.\n\nA separate issue that still needs to be addressed is this:\n\n```bash\n$ node -e 'var s = new (require(\"net\").Socket)(3); s.listen(console.log)'\n\nnet.js:948\n    self._listen2(address, port, addressType, backlog, fd);\n         ^\nTypeError: Object #<Socket> has no method '_listen2'\n    at listen (net.js:948:10)\n    at Socket.listen (net.js:164:3)\n    at Object.eval (eval at <anonymous> (eval:1:82))\n    at Object.<anonymous> (eval:1:70)\n    at Module._compile (module.js:449:26)\n    at evalScript (node.js:270:25)\n    at startup (node.js:76:7)\n    at node.js:611:3\n```","assignee":null,"labels":[],"closed_at":null,"milestone":null,"id":5677955,"url":"https://api.github.com/repos/joyent/node/issues/3729"},{"pull_request":{"patch_url":null,"html_url":null,"diff_url":null},"comments":0,"title":"require('path').delimiter - \";\" on Windows, \":\" on POSIX","created_at":"2012-07-17T23:23:22Z","user":{"login":"timcameronryan","gravatar_id":"028ba5b41575252757fa149296ef6842","avatar_url":"https://secure.gravatar.com/avatar/028ba5b41575252757fa149296ef6842?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":80639,"url":"https://api.github.com/users/timcameronryan"},"html_url":"https://github.com/joyent/node/issues/3728","number":3728,"updated_at":"2012-07-17T23:23:22Z","state":"open","body":"This would reflect Python's os.pathsep, not to be confused with Python's os.sep or require('path').sep.","assignee":null,"labels":[],"closed_at":null,"milestone":null,"id":5677499,"url":"https://api.github.com/repos/joyent/node/issues/3728"},{"pull_request":{"patch_url":"https://github.com/joyent/node/pull/3723.patch","html_url":"https://github.com/joyent/node/pull/3723","diff_url":"https://github.com/joyent/node/pull/3723.diff"},"comments":2,"title":"nextTick Now (Round 2)","created_at":"2012-07-17T04:31:50Z","user":{"login":"isaacs","gravatar_id":"73a2b24daecb976af81e010b7a3ce3c6","avatar_url":"https://secure.gravatar.com/avatar/73a2b24daecb976af81e010b7a3ce3c6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":9287,"url":"https://api.github.com/users/isaacs"},"html_url":"https://github.com/joyent/node/issues/3723","number":3723,"updated_at":"2012-07-18T01:04:23Z","state":"open","body":"Passing all tests on all commits.\n\n@bnoordhuis @piscisaureus","assignee":null,"labels":[],"closed_at":null,"milestone":null,"id":5655887,"url":"https://api.github.com/repos/joyent/node/issues/3723"},{"pull_request":{"patch_url":null,"html_url":null,"diff_url":null},"comments":3,"title":"Crypto Hash update after digest","created_at":"2012-07-16T21:07:57Z","user":{"login":"Ayms","gravatar_id":"04e73a8c4a95b19b64d18dc95ac5631b","avatar_url":"https://secure.gravatar.com/avatar/04e73a8c4a95b19b64d18dc95ac5631b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":759202,"url":"https://api.github.com/users/Ayms"},"html_url":"https://github.com/joyent/node/issues/3719","number":3719,"updated_at":"2012-07-17T11:43:38Z","state":"open","body":"This is related to #749 , #1257 and #1415\n\nThe case might be rare but since it has already been discussed, maybe the concern is not only for myself.\n\nAfter a digest, the hash object is not usable any longer for future updates, which usually is right and seems logical.\n\nBut in some cases while streaming things, you can need at a certain point of time the digest (to check things) and might want to continue with the streaming and continue the hash from the initial one, request the digest, continue the hash, etc\n\nSomething like :\n\nvar H = crypto.createHash('sha1');\nH.update(stream);\n//hash stream\ncheck(H.digest('hex'));\nH.update(stream2);\n//hash stream+stream2\n//here H should be at the same state as before the previous digest\ncheck(H.digest('hex'));\netc...\n\nIt does not look so trivial to do, I will do it and update the post (unless you are aware of known implementations) if it can be of any interest, you can close it for now if you feel it's a too exceptional case.\n\nThe concern here as you understand is not to reset the hash after a digest for other uses, but to continue from the begining.\n\n","assignee":null,"labels":[{"color":"e10c02","name":"crypto","url":"https://api.github.com/repos/joyent/node/labels/crypto"},{"color":"0b02e1","name":"feature-request","url":"https://api.github.com/repos/joyent/node/labels/feature-request"}],"closed_at":null,"milestone":null,"id":5650090,"url":"https://api.github.com/repos/joyent/node/issues/3719"},{"pull_request":{"patch_url":"https://github.com/joyent/node/pull/3718.patch","html_url":"https://github.com/joyent/node/pull/3718","diff_url":"https://github.com/joyent/node/pull/3718.diff"},"comments":1,"title":"Dispatch debug messages","created_at":"2012-07-16T18:49:54Z","user":{"login":"prybin","gravatar_id":"78175cb014e15cb75a6b966d4e2daa5c","avatar_url":"https://secure.gravatar.com/avatar/78175cb014e15cb75a6b966d4e2daa5c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":577481,"url":"https://api.github.com/users/prybin"},"html_url":"https://github.com/joyent/node/issues/3718","number":3718,"updated_at":"2012-07-16T18:56:55Z","state":"open","body":"This should be fix for #3626 \"node -debug does not react when is idle\"","assignee":null,"labels":[],"closed_at":null,"milestone":null,"id":5646719,"url":"https://api.github.com/repos/joyent/node/issues/3718"},{"pull_request":{"patch_url":"https://github.com/joyent/node/pull/3717.patch","html_url":"https://github.com/joyent/node/pull/3717","diff_url":"https://github.com/joyent/node/pull/3717.diff"},"comments":2,"title":"timers: support setTimeout(..., Infinity)","created_at":"2012-07-16T17:21:38Z","user":{"login":"indutny","gravatar_id":"2e93f6a5438c2187cabafde2dd91f07f","avatar_url":"https://secure.gravatar.com/avatar/2e93f6a5438c2187cabafde2dd91f07f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":238531,"url":"https://api.github.com/users/indutny"},"html_url":"https://github.com/joyent/node/issues/3717","number":3717,"updated_at":"2012-07-16T19:10:20Z","state":"open","body":"see #3682 for details","assignee":null,"labels":[],"closed_at":null,"milestone":null,"id":5644680,"url":"https://api.github.com/repos/joyent/node/issues/3717"},{"pull_request":{"patch_url":null,"html_url":null,"diff_url":null},"comments":0,"title":"net: improve throughput, batch socket writes","created_at":"2012-07-15T23:55:53Z","user":{"login":"bnoordhuis","gravatar_id":"3d43d9038ab645ecb2e3a1df2951d30a","avatar_url":"https://secure.gravatar.com/avatar/3d43d9038ab645ecb2e3a1df2951d30a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":275871,"url":"https://api.github.com/users/bnoordhuis"},"html_url":"https://github.com/joyent/node/issues/3714","number":3714,"updated_at":"2012-07-15T23:55:53Z","state":"open","body":"Batch socket writes where possible to cut down on the number of syscalls.\n\nTwo possible approaches:\n\n  1. For strings, concatenate and write in one fell swoop, like we we did in v0.4.\n  2. For buffers, pass multiple uv_buf_t structs to uv_write().\n\nFlush the batch at the end of the tick.\n\nPointed out in joyent/libuv#496. I already may have done some work on this in one of my feature branches (but which one?).","assignee":null,"labels":[{"color":"e10c02","name":"net","url":"https://api.github.com/repos/joyent/node/labels/net"}],"closed_at":null,"milestone":null,"id":5630705,"url":"https://api.github.com/repos/joyent/node/issues/3714"},{"pull_request":{"patch_url":null,"html_url":null,"diff_url":null},"comments":1,"title":"host_arch is set incorrectly when cross-compiling","created_at":"2012-07-15T03:19:59Z","user":{"login":"adammw","gravatar_id":"e0036a0ccd84e99d52efbce8dcf029a4","avatar_url":"https://secure.gravatar.com/avatar/e0036a0ccd84e99d52efbce8dcf029a4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":153219,"url":"https://api.github.com/users/adammw"},"html_url":"https://github.com/joyent/node/issues/3713","number":3713,"updated_at":"2012-07-15T23:43:25Z","state":"open","body":"I assume that host_arch means the architecture of the host system (ie. the architecture of everything that can run natively on the 'host' build system), however the current configure logic gets the host_arch out of the C compiler.\n\nThis is fine for standard compiling for the same system, however when cross-compiling the C compiler reports the architecture that it builds for, which should be considered the *target* architecture not the *host* architecture. \n\nOne big exception to this behaviour is windows that ironically works correctly because it does not check the C compiler, but rather uses the `PROCESSOR_ARCHITECTURE` environmental variable.\n\nMy planned patch is to instead move the logic that checks the C compiler to the `target_arch` variable, and add a `host_arch` check based on `uname -p`, bringing unix into line with Windows, making cross-compiling easier and also making the whole thing make some sort of sense. Is this logic correct, ie. would a patch for this be accepted?","assignee":null,"labels":[{"color":"e102d8","name":"build","url":"https://api.github.com/repos/joyent/node/labels/build"}],"closed_at":null,"milestone":null,"id":5624635,"url":"https://api.github.com/repos/joyent/node/issues/3713"},{"pull_request":{"patch_url":"https://github.com/joyent/node/pull/3710.patch","html_url":"https://github.com/joyent/node/pull/3710","diff_url":"https://github.com/joyent/node/pull/3710.diff"},"comments":1,"title":"Timers explode when date has been stubbed","created_at":"2012-07-14T06:29:11Z","user":{"login":"austinbv","gravatar_id":"2c85484c7e19760334d44c29caba7823","avatar_url":"https://secure.gravatar.com/avatar/2c85484c7e19760334d44c29caba7823?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":634699,"url":"https://api.github.com/users/austinbv"},"html_url":"https://github.com/joyent/node/issues/3710","number":3710,"updated_at":"2012-07-17T01:35:57Z","state":"open","body":"Timers in node all throw an exception when date has been stubbed, mocked, or modified and does not respond like a Date.\n\nTo allow for testing and to make times more self-relient the timers module now holds it's own copy of Date rather that referring to the global all over.\n\n*Use cases*\n* Libraries like Timecop.js can be turned into a full npm modules\n* tests can have timeouts that do not freeze when time is modified","assignee":null,"labels":[{"color":"e10c02","name":"timer","url":"https://api.github.com/repos/joyent/node/labels/timer"}],"closed_at":null,"milestone":null,"id":5618410,"url":"https://api.github.com/repos/joyent/node/issues/3710"},{"pull_request":{"patch_url":"https://github.com/joyent/node/pull/3707.patch","html_url":"https://github.com/joyent/node/pull/3707","diff_url":"https://github.com/joyent/node/pull/3707.diff"},"comments":8,"title":"Expose ref/unref for Socket, Server, and Timers","created_at":"2012-07-13T19:31:22Z","user":{"login":"tjfontaine","gravatar_id":"5b0065d5124e5a0fb38e0e7dc998e094","avatar_url":"https://secure.gravatar.com/avatar/5b0065d5124e5a0fb38e0e7dc998e094?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":146447,"url":"https://api.github.com/users/tjfontaine"},"html_url":"https://github.com/joyent/node/issues/3707","number":3707,"updated_at":"2012-07-17T19:27:44Z","state":"open","body":"This exposes the underlying handle `ref` and `unref` for `dgram.Socket`, `net.Socket`, `net.Server`, and `timers`.\n\nIdeal for users who want to create such items but not have them keep the program running. For instance a logging connection, a keep-alive'd socket, or a timer that monitors statistics.\n\nCalling `unref()` on one of these objects will unreference the handle in the event loop, calling `ref()` will restore it and hold the loop open as usual.\n\nFixes #2718","assignee":null,"labels":[],"closed_at":null,"milestone":null,"id":5612220,"url":"https://api.github.com/repos/joyent/node/issues/3707"},{"pull_request":{"patch_url":null,"html_url":null,"diff_url":null},"comments":4,"title":"Assertion failure in 0.8.2","created_at":"2012-07-13T18:02:35Z","user":{"login":"mark-hahn","gravatar_id":"e02c4a24302746f0598c77bbb8044e5d","avatar_url":"https://secure.gravatar.com/avatar/e02c4a24302746f0598c77bbb8044e5d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":811455,"url":"https://api.github.com/users/mark-hahn"},"html_url":"https://github.com/joyent/node/issues/3706","number":3706,"updated_at":"2012-07-16T00:50:21Z","state":"open","body":"I'm running 0.8.2 that I loaded from NVM so there are no compiled add-ons.  I'm getting this error on a lightly loaded server about twice a day ...\n\n    node: /root/.nvm/v0.6.12/include/node/node_object_wrap.h:62:\n    void node::ObjectWrap::Wrap(v8::Handle<v8::Object>): \n    Assertion `handle->InternalFieldCount() > 0' failed.\n\nI first saw the problem on 0.8.1.  Before that I ran 0.6.18 with no problem.\n\nI'm on Ubuntu 12.04 LTS (precise).  I am willing to stay on 0.8.2 to help find the problem but the sooner the fix the better because it causes our app to look flaky when the software reboots.\n","assignee":null,"labels":[],"closed_at":null,"milestone":null,"id":5610280,"url":"https://api.github.com/repos/joyent/node/issues/3706"},{"pull_request":{"patch_url":"https://github.com/joyent/node/pull/3696.patch","html_url":"https://github.com/joyent/node/pull/3696","diff_url":"https://github.com/joyent/node/pull/3696.diff"},"comments":1,"title":"json doc generator now generates _index.json as it creates files.","created_at":"2012-07-12T12:12:49Z","user":{"login":"iapain","gravatar_id":"3c7e3b88791dbc05ef57ab1c544d875f","avatar_url":"https://secure.gravatar.com/avatar/3c7e3b88791dbc05ef57ab1c544d875f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":35413,"url":"https://api.github.com/users/iapain"},"html_url":"https://github.com/joyent/node/issues/3696","number":3696,"updated_at":"2012-07-12T12:27:16Z","state":"open","body":"`generate.js` now accepts `--output=<file>` which `tools/doc/json.js` uses to write the output. If output file is missing then it executes callback. This was required to get the directory for new `_index.json`. Ideally, I left it for you to decide what to call this `_index.json`. There is already an index.json file which should not be generated at all. Additionally it sets title as first heading node text if applicable.\n\nTODO\n* Add exclude files to avoid generation of `index.json`\n* Dependency map in Makefile\n","assignee":null,"labels":[],"closed_at":null,"milestone":null,"id":5570206,"url":"https://api.github.com/repos/joyent/node/issues/3696"},{"pull_request":{"patch_url":"https://github.com/joyent/node/pull/3693.patch","html_url":"https://github.com/joyent/node/pull/3693","diff_url":"https://github.com/joyent/node/pull/3693.diff"},"comments":2,"title":"Make Server.listen({fd: 0}) work correctly","created_at":"2012-07-12T02:48:30Z","user":{"login":"mdlavin","gravatar_id":"8f873fe9068de71459ec6b3c9b947dec","avatar_url":"https://secure.gravatar.com/avatar/8f873fe9068de71459ec6b3c9b947dec?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":106903,"url":"https://api.github.com/users/mdlavin"},"html_url":"https://github.com/joyent/node/issues/3693","number":3693,"updated_at":"2012-07-12T17:18:56Z","state":"open","body":"This changeset will fix joyent/node#3692","assignee":null,"labels":[{"color":"e10c02","name":"net","url":"https://api.github.com/repos/joyent/node/labels/net"}],"closed_at":null,"milestone":null,"id":5563678,"url":"https://api.github.com/repos/joyent/node/issues/3693"},{"pull_request":{"patch_url":null,"html_url":null,"diff_url":null},"comments":4,"title":"Segmentation fault with fs.statSync()","created_at":"2012-07-11T20:46:31Z","user":{"login":"TooTallNate","gravatar_id":"693307b4e0cb9366f34862c9dfacd7fc","avatar_url":"https://secure.gravatar.com/avatar/693307b4e0cb9366f34862c9dfacd7fc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":71256,"url":"https://api.github.com/users/TooTallNate"},"html_url":"https://github.com/joyent/node/issues/3690","number":3690,"updated_at":"2012-07-12T10:32:04Z","state":"open","body":"Repro:\n\n``` js\nvar stat = require('fs').statSync\n\nfunction t() {\n  stat(__filename)\n  t()\n}\n\nt()\n```\n\nI would expect this to get a \"Maximum call stack size exceeded\" RangeError thrown here, but instead I see:\n\n```\nSegmentation fault: 11\n```\n\nIf you comment out the `stat()` call, then the RangeError is thrown as expected.\n\nThis is on OS X using node v0.8.2. Also happens on 0.6.19 at least.","assignee":{"login":"bnoordhuis","gravatar_id":"3d43d9038ab645ecb2e3a1df2951d30a","avatar_url":"https://secure.gravatar.com/avatar/3d43d9038ab645ecb2e3a1df2951d30a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":275871,"url":"https://api.github.com/users/bnoordhuis"},"labels":[{"color":"e10c02","name":"fs","url":"https://api.github.com/repos/joyent/node/labels/fs"},{"color":"444444","name":"confirmed-bug","url":"https://api.github.com/repos/joyent/node/labels/confirmed-bug"}],"closed_at":null,"milestone":null,"id":5558335,"url":"https://api.github.com/repos/joyent/node/issues/3690"},{"pull_request":{"patch_url":"https://github.com/joyent/node/pull/3689.patch","html_url":"https://github.com/joyent/node/pull/3689","diff_url":"https://github.com/joyent/node/pull/3689.diff"},"comments":5,"title":"Feature tls verify identity","created_at":"2012-07-11T19:57:01Z","user":{"login":"indutny","gravatar_id":"2e93f6a5438c2187cabafde2dd91f07f","avatar_url":"https://secure.gravatar.com/avatar/2e93f6a5438c2187cabafde2dd91f07f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":238531,"url":"https://api.github.com/users/indutny"},"html_url":"https://github.com/joyent/node/issues/3689","number":3689,"updated_at":"2012-07-16T23:27:03Z","state":"open","body":"See #3680 for details","assignee":null,"labels":[{"color":"e10c02","name":"tls","url":"https://api.github.com/repos/joyent/node/labels/tls"}],"closed_at":null,"milestone":null,"id":5557128,"url":"https://api.github.com/repos/joyent/node/issues/3689"},{"pull_request":{"patch_url":null,"html_url":null,"diff_url":null},"comments":6,"title":"process.title not setting on OS X","created_at":"2012-07-11T05:39:16Z","user":{"login":"tylermwashburn","gravatar_id":"63f8bf44b63c3832adc7d7350f961059","avatar_url":"https://secure.gravatar.com/avatar/63f8bf44b63c3832adc7d7350f961059?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":418348,"url":"https://api.github.com/users/tylermwashburn"},"html_url":"https://github.com/joyent/node/issues/3687","number":3687,"updated_at":"2012-07-11T22:58:49Z","state":"open","body":"    -> process.title = \"edon\"\n    -> process.title\n    <- \"node\"","assignee":null,"labels":[{"color":"02e10c","name":"macintosh","url":"https://api.github.com/repos/joyent/node/labels/macintosh"},{"color":"e10c02","name":"process","url":"https://api.github.com/repos/joyent/node/labels/process"}],"closed_at":null,"milestone":null,"id":5541441,"url":"https://api.github.com/repos/joyent/node/issues/3687"},{"pull_request":{"patch_url":null,"html_url":null,"diff_url":null},"comments":2,"title":"uv_timer_start: Assertion `timeout >= 0' failed","created_at":"2012-07-10T17:38:36Z","user":{"login":"BooBSD","gravatar_id":"e7efe55e54922d72c913956153464db9","avatar_url":"https://secure.gravatar.com/avatar/e7efe55e54922d72c913956153464db9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":48304,"url":"https://api.github.com/users/BooBSD"},"html_url":"https://github.com/joyent/node/issues/3682","number":3682,"updated_at":"2012-07-13T21:44:47Z","state":"open","body":"Hello,\n\nI've updated node on my Ubuntu 12.04 to the 8.2 and got the following error couple of times:\n\n```javascript\nnode: ../deps/uv/src/unix/timer.c:55: uv_timer_start: Assertion `timeout >= 0' failed.\nAborted (core dumped)\n```","assignee":{"login":"indutny","gravatar_id":"2e93f6a5438c2187cabafde2dd91f07f","avatar_url":"https://secure.gravatar.com/avatar/2e93f6a5438c2187cabafde2dd91f07f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":238531,"url":"https://api.github.com/users/indutny"},"labels":[],"closed_at":null,"milestone":null,"id":5529113,"url":"https://api.github.com/repos/joyent/node/issues/3682"},{"pull_request":{"patch_url":null,"html_url":null,"diff_url":null},"comments":1,"title":"https.request doesn't implement server identity checks","created_at":"2012-07-10T17:34:51Z","user":{"login":"awick","gravatar_id":"56459e33848bd9660e7a2642d4ea46e8","avatar_url":"https://secure.gravatar.com/avatar/56459e33848bd9660e7a2642d4ea46e8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":427321,"url":"https://api.github.com/users/awick"},"html_url":"https://github.com/joyent/node/issues/3680","number":3680,"updated_at":"2012-07-13T08:30:58Z","state":"open","body":"Currently a Node.js using https.request is vulnerable to MITM attacks since Node.js doesn't validate the server's identity matches the requested hostname.  So a server could present any VALID cert and the request will continue.  https.request needs to check that the hostname requested matches the server's identity inside the server's Certificate message.  Having a developer use getPeerCertificate and checking in the application isn't enough since a) the request has already gone through potentially exposing data b) the default behavior is insecure.  If desired an option can be added to disable the check, however by default it should be on.\n\n\nA simple test that should fail\n1) Add an ip for www.google.com to your /etc/hosts with a different hostname.  For example \"173.194.75.104 www.thisisnotgoogle.com\"\n2) Visit https://www.thisisnotgoogle.com with your favorite browser - you should see the expected error\n3) Try a simple node script, there is no error\n\nvar https = require('https');\nhttps.request({rejectUnauthorized:true, host: 'www.thisisnotgoogle.com', port:443, path:'/index.html'}, function(res) {\n  console.log(\"res\", res);\n  res.on('data', function (chunk) { console.log(chunk.toString()); });\n}).end();\n\n\n\nBecause of wildcards and other things, implementing this check is complex, you may want to look at the curl source code (lib/ssluse.c) or chromium (http://code.google.com/searchframe#OAMlx_jo-ck/src/net/base/x509_certificate.cc) or other open source packages.\n\n\nSee http://tools.ietf.org/html/rfc2818 Section 3.1 Server Identity or more recent http://tools.ietf.org/html/rfc6125","assignee":{"login":"indutny","gravatar_id":"2e93f6a5438c2187cabafde2dd91f07f","avatar_url":"https://secure.gravatar.com/avatar/2e93f6a5438c2187cabafde2dd91f07f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":238531,"url":"https://api.github.com/users/indutny"},"labels":[{"color":"e10c02","name":"https","url":"https://api.github.com/repos/joyent/node/labels/https"}],"closed_at":null,"milestone":null,"id":5529024,"url":"https://api.github.com/repos/joyent/node/issues/3680"},{"pull_request":{"patch_url":"https://github.com/joyent/node/pull/3676.patch","html_url":"https://github.com/joyent/node/pull/3676","diff_url":"https://github.com/joyent/node/pull/3676.diff"},"comments":4,"title":"cluster, net: move internal parts out of cluster","created_at":"2012-07-10T11:48:41Z","user":{"login":"AndreasMadsen","gravatar_id":"e6a7ed778a0e8d9f284c28e119f1d212","avatar_url":"https://secure.gravatar.com/avatar/e6a7ed778a0e8d9f284c28e119f1d212?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":505333,"url":"https://api.github.com/users/AndreasMadsen"},"html_url":"https://github.com/joyent/node/issues/3676","number":3676,"updated_at":"2012-07-17T10:22:58Z","state":"open","body":"With this patch it is possible to write a cluster-like module as an userland module, without using any internal API.  \n\n@isaacs I had hoped to remove the `net._createServerHandle` from `cluster` and `net`, but the transparency that cluster provide and depend on seams to make this very hard.\n\n_This patch is target 0.9._","assignee":null,"labels":[{"color":"e10c02","name":"net","url":"https://api.github.com/repos/joyent/node/labels/net"}],"closed_at":null,"milestone":null,"id":5521130,"url":"https://api.github.com/repos/joyent/node/issues/3676"},{"pull_request":{"patch_url":"https://github.com/joyent/node/pull/3674.patch","html_url":"https://github.com/joyent/node/pull/3674","diff_url":"https://github.com/joyent/node/pull/3674.diff"},"comments":6,"title":"Allow the code to decide if it should use read or read2.","created_at":"2012-07-09T14:36:21Z","user":{"login":"VanCoding","gravatar_id":"6a09f9902e9b2280c3c7b298043ceb6c","avatar_url":"https://secure.gravatar.com/avatar/6a09f9902e9b2280c3c7b298043ceb6c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":595361,"url":"https://api.github.com/users/VanCoding"},"html_url":"https://github.com/joyent/node/issues/3674","number":3674,"updated_at":"2012-07-13T06:49:05Z","state":"open","body":"This change makes the whole thing a bit more dynamic & it allows one to receive handles from pipes that we got from a pipe server. Hope you pull it.","assignee":null,"labels":[],"closed_at":null,"milestone":null,"id":5500027,"url":"https://api.github.com/repos/joyent/node/issues/3674"},{"pull_request":{"patch_url":null,"html_url":null,"diff_url":null},"comments":11,"title":"JSON documentation index listing","created_at":"2012-07-08T17:17:58Z","user":{"login":"mainerror","gravatar_id":"32d851b22e4659bca3a94b6286cada76","avatar_url":"https://secure.gravatar.com/avatar/32d851b22e4659bca3a94b6286cada76?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":48783,"url":"https://api.github.com/users/mainerror"},"html_url":"https://github.com/joyent/node/issues/3668","number":3668,"updated_at":"2012-07-11T06:27:39Z","state":"open","body":"The JSON representation of the documentation is pretty nice and useful, no doubt but it is too complicated to work with it the way it is now.\n\nA listing of the JSON documents and their URL would help a lot when working with the JSON representation of the documentation.\n\nSomething like\n\n```json\n{\n  ...\n  \"synopsis\": {\n      \"htmlURL\": \"http://nodejs.org/api/synopsis.html\",\n      \"jsonURL\": \"http://nodejs.org/api/synopsis.json\"\n  },\n  ...\n}\n```","assignee":null,"labels":[{"color":"944008","name":"doc","url":"https://api.github.com/repos/joyent/node/labels/doc"}],"closed_at":null,"milestone":null,"id":5487760,"url":"https://api.github.com/repos/joyent/node/issues/3668"},{"pull_request":{"patch_url":null,"html_url":null,"diff_url":null},"comments":0,"title":"Support for X509, OCSP, CRL, ASN1 and TLS session details.","created_at":"2012-07-07T20:43:23Z","user":{"login":"rmhrisk","gravatar_id":"67fc2c4d10b01fb3b43861a3c78ab248","avatar_url":"https://secure.gravatar.com/avatar/67fc2c4d10b01fb3b43861a3c78ab248?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":1619279,"url":"https://api.github.com/users/rmhrisk"},"html_url":"https://github.com/joyent/node/issues/3662","number":3662,"updated_at":"2012-07-07T20:43:23Z","state":"open","body":"Go currently has support for a ton of rich information about TLS and PKI related objects, see: http://golang.org/pkg/ and the TLS, X509 and PKIX objects.\n\nGo's coverage isnt perfect but its enough to do some cool stuff that today can't be done directly in Node.\n\nI would love to see this stuff exposed in node also, a few examples this would enable include:\n\n1. SSL configuration checker - https://www.ssllabs.com/ssltest/index.html\n2. Certificate Crawler -  https://www.eff.org/observatory\n3. SSL support tools - http://www.sslshopper.com/ssl-certificate-tools.html\n4. ASN1 diagostics - http://www.lapo.it/asn1js/\n\nRyan\n\n\n","assignee":null,"labels":[],"closed_at":null,"milestone":null,"id":5482844,"url":"https://api.github.com/repos/joyent/node/issues/3662"},{"pull_request":{"patch_url":"https://github.com/joyent/node/pull/3661.patch","html_url":"https://github.com/joyent/node/pull/3661","diff_url":"https://github.com/joyent/node/pull/3661.diff"},"comments":0,"title":"tls: async session storage","created_at":"2012-07-07T20:21:27Z","user":{"login":"indutny","gravatar_id":"2e93f6a5438c2187cabafde2dd91f07f","avatar_url":"https://secure.gravatar.com/avatar/2e93f6a5438c2187cabafde2dd91f07f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":238531,"url":"https://api.github.com/users/indutny"},"html_url":"https://github.com/joyent/node/issues/3661","number":3661,"updated_at":"2012-07-07T23:49:35Z","state":"open","body":"WIP\n\nExample:\n```javascript\n\nvar cluster = require('cluster'),\n    https = require('https'),\n    fs = require('fs'),\n    Buffer = require('buffer').Buffer;\n\nvar redis = require('redis').createClient();\n\nfunction start() {\n  var options = {\n    key: fs.readFileSync('./test/fixtures/test_key.pem'),\n    cert: fs.readFileSync('./test/fixtures/test_cert.pem')\n  };\n\n  var server = https.createServer(options, function (req, res) {\n    if (req.url === '/abc') process.exit();\n    res.end('hello');\n  });\n\n  server.listen(44300, function() {\n    console.log('listening!');\n  });\n\n  server.on('resumeTlsSession', function(key, callback) {\n    redis.get('tls_sessions:' + key.toString('base64'), function(err, sess) {\n      if (err || !sess) return callback(err, sess);\n      callback(null, new Buffer(sess, 'base64'));\n    });\n  });\n\n  server.on('newTlsSession', function(key, session) {\n    var rkey = 'tls_sessions:' + key.toString('base64');\n    redis.set(rkey, session.toString('base64'));\n    redis.expire(rkey, 300);\n  });\n}\n\nif (cluster.isMaster) {\n  for (var i = 0; i < 4; i++) {\n    cluster.fork();\n  }\n\n  cluster.on('exit', function(worker, code, signal) {\n    cluster.fork();\n  });\n} else {\n  start();\n}\n```","assignee":null,"labels":[{"color":"e10c02","name":"tls","url":"https://api.github.com/repos/joyent/node/labels/tls"}],"closed_at":null,"milestone":null,"id":5482740,"url":"https://api.github.com/repos/joyent/node/issues/3661"},{"pull_request":{"patch_url":"https://github.com/joyent/node/pull/3655.patch","html_url":"https://github.com/joyent/node/pull/3655","diff_url":"https://github.com/joyent/node/pull/3655.diff"},"comments":12,"title":"defer dgram listening event","created_at":"2012-07-06T16:08:52Z","user":{"login":"tjfontaine","gravatar_id":"5b0065d5124e5a0fb38e0e7dc998e094","avatar_url":"https://secure.gravatar.com/avatar/5b0065d5124e5a0fb38e0e7dc998e094?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":146447,"url":"https://api.github.com/users/tjfontaine"},"html_url":"https://github.com/joyent/node/issues/3655","number":3655,"updated_at":"2012-07-09T15:23:11Z","state":"open","body":"dgram `.bind`'s `._handle.lookup` may be synchronous if bind is called without an address or if address is indeed an ip. This means 'listening' may fire before a caller has assigned a handler for the event.\n\nThis patch defers that event.\n\nHowever if `.bind` is called with a dns name the event may be deferred a second tick since `dns` implicitly defers requests.","assignee":null,"labels":[{"color":"e10c02","name":"dgram","url":"https://api.github.com/repos/joyent/node/labels/dgram"}],"closed_at":null,"milestone":null,"id":5468355,"url":"https://api.github.com/repos/joyent/node/issues/3655"},{"pull_request":{"patch_url":"https://github.com/joyent/node/pull/3653.patch","html_url":"https://github.com/joyent/node/pull/3653","diff_url":"https://github.com/joyent/node/pull/3653.diff"},"comments":0,"title":"Allow tls.connect to start on server-side sockets and add tls.start as a simple wrapper for tls.connect","created_at":"2012-07-06T13:34:46Z","user":{"login":"RushPL","gravatar_id":"d3cefe94a5218776d2c1db459b19f691","avatar_url":"https://secure.gravatar.com/avatar/d3cefe94a5218776d2c1db459b19f691?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":115926,"url":"https://api.github.com/users/RushPL"},"html_url":"https://github.com/joyent/node/issues/3653","number":3653,"updated_at":"2012-07-06T16:57:42Z","state":"open","body":"I have found a piece of code floating on the internet to initiate a TLS function in the middle of a TCP connection, but the code in question has not functioned well. I decided to look into tls.js module whether it can do it all with some minor adjustment.\n\nThere was a previous pull request for this function https://github.com/joyent/node/pull/848\nHowever, current state of connect does not allow to start TLS arbitralily on a server-side socket.\n\nThus, I propose a very simple change to `tls.connect` allowing to say whether we want a server side socket via `options.asServer` but also I add a very nice intuitive wrapper called tls.start and two tests.\n\n`tls.start` is in the same style as `child_process.fork` so I think it fits together inside node.\n\nI am willing to update documention if a green light is given to this improvements.","assignee":null,"labels":[{"color":"e10c02","name":"tls","url":"https://api.github.com/repos/joyent/node/labels/tls"}],"closed_at":null,"milestone":null,"id":5465205,"url":"https://api.github.com/repos/joyent/node/issues/3653"}]
